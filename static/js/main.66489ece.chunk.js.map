{"version":3,"sources":["imgs/earth.svg","imgs/slovakiaIcon.svg","Nav.js","Covid/CovidTable.js","Covid/DougnatChart.js","Covid/CovidApp.js","Covid/CompareCislo.js","Covid/TabulkaMesta.js","Covid/CovidSK.js","Todo/Todo.js","Todo/HandleTodo.js","Todo/CompareCislo.js","Todo/TodoApp.js","App.js","index.js","imgs/coronaIcon.svg","imgs/wideArrow.svg"],"names":["module","exports","Nav","navStyle","color","className","onClick","console","log","window","location","href","style","to","alt","src","earthIcon","slovakiaIcon","CovidTable","props","useState","ikonka","setIkonka","sipkyDole","setSipkyDole","transition","marginBottom","marginLeft","sipkaKontinenty","setSipkaKontinenty","position","left","fontSize","styleForRollDown","setStyleForRollDown","zmenIkonku","key","myStyle2","transform","FormatNum","num","toString","replace","rollDownContintinents","background","type","id","onKeyUp","filter","tr","td","i","document","getElementById","value","toUpperCase","getElementsByTagName","length","textContent","innerText","indexOf","display","placeholder","sortBy","countriesData","map","item","country","width","cases","active","todayCases","deaths","fontWeight","todayDeaths","recovered","functionForWorld","textDecoration","totalTests","DougnatChart","data","labels","datasets","label","dataForGraph","backgroundColor","height","options","maintainAspectRatio","animation","duration","easing","CovidApp","mainData","setMainData","setCountriesData","direction","price_usd","state","setState","useEffect","HandleLoadData","HandleLoadData2","a","fetch","response","json","sort","b","parseFloat","numberTrans3","output","toFixed","coronaIcon","CompareCislo","sorting","stlpec","A","females","B","males","amount","infected","TabulkaMesta","tabulkaData","setSorting","ShowHide","setShowHide","boolean","text","textPreZobrazenieObci","setTextPreZobrazenieObci","sipkaObce","setSipkaObce","handleSortObce","jednaObec","index","title","infected_delta","CovidSK","dataSvk","setDataSvk","maxDate","setMaxDate","maxDateboolLean","setMaxDateboolLean","styleWideArrow","setStyleWideArrow","LoadData","negatTestyMoje","Object","keys","chart","Heading","keyframes","HomeHeader","styled","div","changeWideArrow","tested_chart","c","newRecovered","newDeaths","tested","day","handleData","MaxInfected","wideArrow","day1","end","parseInt","prefix","date","handleGraph1","MaxDaily","pom1","handleGraph2","Todo","todo","toggleTodo","time","month","slice","year","handleFormatTime","onChange","checked","complete","name","HandleTodo","todos","casSort","TodoApp","setTodos","todoNameRef","useRef","setCasSort","selectedDate","setSelectedDate","myStyle","setMyStyle","handleNumberTime","localStorage","setItem","JSON","stringify","storedTodos","parse","getItem","newTodos","find","ref","selected","dateFormat","isClearable","placeholderText","e","preventDefault","current","d","dateFullNumber","getFullYear","getMonth","getDate","prev","uuidV4","confirm","polyfill","require","App","basename","path","component","exact","ReactDOM","render"],"mappings":"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","file":"static/js/main.66489ece.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/earth.cdc4522b.svg\";","module.exports = __webpack_public_path__ + \"static/media/slovakiaIcon.a29682dd.svg\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './nav.css'\r\nimport earthIcon from \"./imgs/earth.svg\"\r\nimport slovakiaIcon from \"./imgs/slovakiaIcon.svg\"\r\n\r\nfunction Nav() {\r\n\r\n\r\n    let navStyle = {\r\n        color: 'white',\r\n    }\r\n    function doubleClickFC() {\r\n        // alert(\"xx\")\r\n        console.log(\"xxx\")\r\n        window.location.href = \"#/Todo\"\r\n    }\r\n\r\n    return (\r\n        <nav className=\"navApp\" >\r\n            <div className=\"doubleClick\" onClick={doubleClickFC}></div>\r\n            <ul className=\"navLinks\">\r\n                <li>\r\n                    <Link style={navStyle} to='/Covid/CovidApp'>\r\n                        <div>\r\n                            <img alt=\"\" src={earthIcon} className=\"earthIcon\" />Covid vo svete\r\n                        </div>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link style={navStyle} to='/Covid/CovidSK'>\r\n                        <div>\r\n                            <img alt=\"\" src={slovakiaIcon} className=\"svkIcon\" />Covid na slovensku\r\n                        </div>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaSortAmountDown } from 'react-icons/fa';\r\nimport { IoIosArrowDown } from 'react-icons/io';\r\n\r\nfunction CovidTable(props) {\r\n    const [ikonka, setIkonka] = useState('cases')\r\n    const [sipkyDole, setSipkyDole] = useState(true)\r\n    const [sipkaKontinenty, setSipkaKontinenty] = useState({\r\n        transition: 'all .2s ease-in',\r\n        marginBottom: '-3px',\r\n        marginLeft: '3px',\r\n    })\r\n    const [styleForRollDown, setStyleForRollDown] = useState({\r\n        position: 'absolute',\r\n        left: '-1000px',\r\n        transition: 'all .2s ease-in',\r\n        fontSize: '15px',\r\n    })\r\n\r\n    function zmenIkonku(key) {\r\n        if (key === ikonka) {\r\n            setIkonka(key + \"2\")\r\n        }\r\n        else { setIkonka(key) }\r\n    }\r\n\r\n    const myStyle2 = {\r\n        transform: \"rotateX(180deg)\",\r\n    }\r\n\r\n\r\n    function myFunction() {\r\n        var input, filter, table, tr, td, i, txtValue;\r\n        input = document.getElementById(\"myInput\");\r\n        filter = input.value.toUpperCase();\r\n        table = document.getElementById(\"myTable\");\r\n        tr = table.getElementsByTagName(\"tr\");\r\n        for (i = 0; i < tr.length; i++) {\r\n            td = tr[i].getElementsByTagName(\"td\")[0];\r\n            if (td) {\r\n                txtValue = td.textContent || td.innerText;\r\n                if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n                    tr[i].style.display = \"\";\r\n                } else {\r\n                    tr[i].style.display = \"none\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    function FormatNum(num) {\r\n        if (num) {\r\n            return (\r\n                num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n            )\r\n        }\r\n    }\r\n\r\n\r\n\r\n\r\n    function rollDownContintinents() {\r\n        setSipkyDole(!sipkyDole)\r\n        if (sipkyDole) {\r\n            setSipkaKontinenty({\r\n                transform: \"rotate(180deg)\",\r\n                transition: 'all .2s ease-in',\r\n                marginBottom: '-3px',\r\n                marginLeft: '3px',\r\n            })\r\n            setStyleForRollDown({\r\n                background: 'rgb(234, 234, 234)',\r\n                fontSize: '15px',\r\n                transition: 'all .2s ease-in',\r\n            })\r\n        }\r\n        else {\r\n            setStyleForRollDown({\r\n                position: 'absolute',\r\n                left: '-1000px',\r\n                transition: 'all .2s ease-in',\r\n                fontSize: '15px',\r\n            })\r\n\r\n            setSipkaKontinenty({\r\n                transform: \"rotate(0deg)\",\r\n                transition: 'all .2s ease-in',\r\n                marginBottom: '-3px',\r\n                marginLeft: '3px',\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    function functionForWorld(item, id) {\r\n        return (<>\r\n            <tr key={id} style={{ background: 'rgb(234, 234, 234)' }} >\r\n                <td style={{ width: '100px' }} onClick={rollDownContintinents}>\r\n                    Celý svet <span ><IoIosArrowDown style={sipkaKontinenty} /></span>\r\n                </td>\r\n                <td>{FormatNum(item.cases)}</td>\r\n                <td>{FormatNum(item.active)}</td>\r\n                <td style={{ background: ' rgb(254, 255, 194, .4)' }}>+{FormatNum(item.todayCases)} </td>\r\n                <td>{FormatNum(item.deaths)}</td>\r\n                <td style={{ color: ' rgba(156, 20, 20, 0.849)', fontWeight: 'bold' }}>+{FormatNum(item.todayDeaths)} </td>\r\n                <td style={{ fontWeight: 'bold', color: 'green' }}>{FormatNum(item.recovered)}</td>\r\n            </tr>\r\n            {props.countriesData.map((item, id) => (\r\n                item.country === 'Europe'\r\n                    || item.country === 'North America'\r\n                    || item.country === 'Asia'\r\n                    || item.country === 'Africa'\r\n                    || item.country === 'South America'\r\n                    || item.country === 'Oceania' ?\r\n                    <tr key={id} className=\"kontinenty\" style={styleForRollDown}  >\r\n                        <td style={{ width: '100px' }} className=\"kontinenty\">{item.country} </td>\r\n                        <td className=\"kontinenty\">{FormatNum(item.cases)}</td>\r\n                        <td className=\"kontinenty\">{FormatNum(item.active)}</td>\r\n                        <td style={{ background: ' rgb(254, 255, 194, .4)' }} className=\"kontinenty\">+{FormatNum(item.todayCases)} </td>\r\n                        <td className=\"kontinenty\">{FormatNum(item.deaths)}</td>\r\n                        <td style={{ color: ' rgba(156, 20, 20, 0.849)', fontWeight: 'bold' }} className=\"kontinenty\">+{FormatNum(item.todayDeaths)} </td>\r\n                        <td style={{ fontWeight: 'bold', color: 'green' }} className=\"kontinenty\">{FormatNum(item.recovered)}</td>\r\n                    </tr>\r\n                    : null\r\n            ))}\r\n\r\n        </>\r\n        )\r\n    }\r\n    function greenBackgroundforTR(active) {\r\n        if (active)\r\n            return null\r\n        else\r\n            return ({ background: 'rgb(190, 245, 204)' })\r\n    }\r\n    return (\r\n        <>\r\n            <input type=\"text\" id=\"myInput\" onKeyUp={myFunction} placeholder=\"Hľadať..\" className=\"inputSearch\" />\r\n            <div className=\"divTable\" >\r\n                <table id=\"myTable\">\r\n                    <thead>\r\n                        <tr>\r\n                            <th onClick={() => (props.sortBy(`totalTests`), zmenIkonku(`totalTests`))} >\r\n                                Krajina\r\n                            {ikonka === 'totalTests'\r\n                                    ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                                {ikonka === 'totalTests2'\r\n                                    ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                            </th>\r\n                            <th onClick={() => (props.sortBy('cases'), zmenIkonku('cases'))} >\r\n                                Počet nakazených\r\n                            {ikonka === 'cases'\r\n                                    ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                                {ikonka === 'cases2'\r\n                                    ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                            </th>\r\n                            <th onClick={() => (props.sortBy('active'), zmenIkonku('active'))} >\r\n                                Aktívne prípady\r\n                            {ikonka === 'active'\r\n                                    ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                                {ikonka === 'active2'\r\n                                    ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                            </th>\r\n                            <th onClick={() => (props.sortBy('todayCases'), zmenIkonku('todayCases'))} >\r\n                                Nové prípady\r\n                            {ikonka === 'todayCases'\r\n                                    ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                                {ikonka === 'todayCases2'\r\n                                    ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                            </th>\r\n                            <th onClick={() => (props.sortBy('deaths'), zmenIkonku('deaths'))} >\r\n                                Počet úmrtí\r\n                            {ikonka === 'deaths'\r\n                                    ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                                {ikonka === 'deaths2'\r\n                                    ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                            </th>\r\n                            <th onClick={() => (props.sortBy('todayDeaths'), zmenIkonku('todayDeaths'))} >\r\n                                Nové úmrtia\r\n                            {ikonka === 'todayDeaths'\r\n                                    ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                                {ikonka === 'todayDeaths2'\r\n                                    ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                            </th>\r\n                            <th onClick={() => (props.sortBy('recovered'), zmenIkonku('recovered'))} >\r\n                                Počet vyliečených\r\n                            {ikonka === 'recovered'\r\n                                    ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                                {ikonka === 'recovered2'\r\n                                    ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                    : null\r\n                                }\r\n                            </th>\r\n                        </tr>\r\n                    </thead>\r\n                    <tbody>\r\n                        {props.countriesData.map((item, id) => (\r\n                            item.country === 'World' ? functionForWorld(item, id) :\r\n                                item.country === 'Europe'\r\n                                    || item.country === 'North America'\r\n                                    || item.country === 'Asia'\r\n                                    || item.country === 'Africa'\r\n                                    || item.country === 'South America'\r\n                                    || item.country === 'Oceania'\r\n                                    || item.country === 'Total:' ? null :\r\n                                    <tr key={id} style={greenBackgroundforTR(item.active)}>\r\n                                        <td style={{ width: '100px' }}>\r\n                                            {item.country === 'Slovakia' ?\r\n                                                <div style={{ fontWeight: 'bold', textDecoration: 'underline' }}>\r\n                                                    <Link to='/Covid/CovidSK'>{item.country}</Link>\r\n                                                </div>\r\n                                                : item.country\r\n                                            }\r\n                                            {item.totalTests > 0 ?\r\n                                                <div className=\"firstCase\">Počet testov: <div className=\"firstCaseNumber\">{FormatNum(item.totalTests)}</div></div>\r\n                                                : null}\r\n                                        </td>\r\n                                        <td>{FormatNum(item.cases)}</td>\r\n                                        <td>{FormatNum(item.active)} {item.active ? null : \"0 !!!\"}</td>\r\n                                        {item.todayCases > 0 ?\r\n                                            <td style={{ background: ' rgb(254, 255, 194)' }}>+{FormatNum(item.todayCases)} </td>\r\n                                            : <td></td>\r\n                                        }\r\n                                        <td>{FormatNum(item.deaths)}</td>\r\n                                        {item.todayDeaths > 0 ?\r\n                                            <td style={{ color: ' rgba(156, 20, 20, 0.849)', fontWeight: 'bold' }}>+{FormatNum(item.todayDeaths)} </td>\r\n                                            : <td></td>\r\n                                        }\r\n                                        <td style={{ fontWeight: 'bold', color: 'green' }}>{FormatNum(item.recovered)}</td>\r\n                                    </tr>\r\n                        ))}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default CovidTable","import React from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport './csspreSvk.css'\r\nfunction DougnatChart(props) {\r\n    // const data = {\r\n    //     datasets: [{\r\n    //         data: [10, 20, 30]\r\n    //     }],\r\n\r\n    //     // These labels appear in the legend and in the tooltips when hovering different arcs\r\n    //     labels: [\r\n    //         'Red',\r\n    //         'Yellow',\r\n    //         'Blue'\r\n    //     ]\r\n    // };\r\n\r\n\r\n    // const data = {\r\n    //     labels: ['Počet testovaných', 'Negatívne testy', 'Pozitívne testy', 'Počet vyliečených', 'Počet úmrtií'],\r\n    //     datasets: [{\r\n    //         label: '# of Votes',\r\n    //         data: [23672, 22957, 715, 23, 2],\r\n    //         backgroundColor: [\r\n    //             'blue',\r\n    //             'yellow',\r\n    //             'red',\r\n    //             'green',\r\n    //             'black',\r\n    //         ],\r\n    //     }]\r\n    // }\r\n\r\n    const data = {\r\n        labels: ['Nakazení', 'Vyliečení', 'Úmrtia'],\r\n        datasets: [{\r\n            label: '# of Votes',\r\n            data: props.dataForGraph,\r\n            backgroundColor: [\r\n                '#f85959',\r\n                '#17b978',\r\n                '#430d27',\r\n            ],\r\n        }]\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <div className=\"dougnut\">\r\n                <Doughnut\r\n                    data={data}\r\n                    height={300}\r\n                    options={{\r\n                        maintainAspectRatio: false,\r\n                        animation: { duration: 2000, easing: 'easeOutQuint' }\r\n                    }}\r\n                />\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DougnatChart\r\n","import React, { useState, useEffect } from 'react'\r\nimport './covid.css'\r\nimport './covidDesign.css'\r\nimport { Link } from 'react-router-dom'\r\nimport coronaIcon from \"../imgs/coronaIcon.svg\"\r\nimport CovidTable from \"./CovidTable\"\r\nimport { GiDeathSkull } from \"react-icons/gi\";\r\n// import { GiHealthNormal } from \"react-icons/gi\";\r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport DougnatChart from \"./DougnatChart\"\r\nfunction CovidApp() {\r\n    // const url = 'https://covid19.mathdro.id/api/'\r\n    const url = 'https://coronavirus-19-api.herokuapp.com/all'\r\n    // const svk = 'https://covid19.mathdro.id/api/countries/slovakia'\r\n    const [mainData, setMainData] = useState([])\r\n\r\n\r\n    const urlCountries = 'https://coronavirus-19-api.herokuapp.com/countries'\r\n    const [countriesData, setCountriesData] = useState([])\r\n    const [state, setState] = useState({\r\n        countriesData: countriesData,\r\n        direction: {\r\n            price_usd: 'asc',\r\n        }\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n        HandleLoadData()\r\n        HandleLoadData2()\r\n    }, [])\r\n\r\n    const HandleLoadData = async () => {\r\n        const response = await fetch(url)\r\n        const data = await response.json()\r\n        setMainData([data.cases, data.recovered, data.deaths])\r\n\r\n        // var fs = require('fs');\r\n\r\n        // fs.writeFile('mynewfile3.txt', 'This is my text', function (err) {\r\n        //     if (err) throw err;\r\n        //     console.log('Replaced!');\r\n        // });\r\n\r\n    }\r\n\r\n    const HandleLoadData2 = async () => {\r\n        const response = await fetch(urlCountries)\r\n        const data = await response.json()\r\n        setCountriesData(data)\r\n\r\n        setState({\r\n            data: data.sort((a, b) => (\r\n                state.direction['cases'] === 'asc'\r\n                    ? parseFloat(a['cases']) - parseFloat(b['cases'])\r\n                    : parseFloat(b['cases']) - parseFloat(a['cases'])\r\n            )),\r\n            direction: {\r\n                ['cases']: state.direction['cases'] === 'asc'\r\n                    ? 'desc'\r\n                    : 'asc'\r\n            }\r\n        })\r\n    }\r\n\r\n    function FormatNum(num) {\r\n        if (num) {\r\n            return (\r\n                num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n            )\r\n        }\r\n    }\r\n\r\n    function numberTrans3(a, b) {\r\n        if (a) {\r\n            let output = b / (a / 100)\r\n            output = b / (a / 100)\r\n            output = output.toFixed(3)\r\n            output = output.toString()\r\n            output = output.replace(\".\", \",\")\r\n            return (\r\n                <div className=\"aktiveNakazenych\">\r\n                    <span>V percentách:</span> {output}%\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function sortBy(key) {\r\n        setState({\r\n            countriesData: countriesData.sort((a, b) => (\r\n                state.direction[key] === 'asc'\r\n                    ? parseFloat(a[key]) - parseFloat(b[key])\r\n                    : parseFloat(b[key]) - parseFloat(a[key])\r\n            )),\r\n            direction: {\r\n                [key]: state.direction[key] === 'asc'\r\n                    ? 'desc'\r\n                    : 'asc'\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"covidApp\">\r\n            <div className=\"cardsDiv\">\r\n                <div className=\"cards\">\r\n                    <div className=\"topCard\">\r\n                        <div className=\"obrDiv\">\r\n                            <div className=\"circle\">\r\n                                <img alt=\"\" src={coronaIcon} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"textCard\"> Počet nakazených</div>\r\n                    </div>\r\n                    <div className=\"mainText\">\r\n                        {FormatNum(mainData[0])}\r\n                        <div className=\"aktiveNakazenych\">\r\n                            <span>Počet aktívnych prípadov:</span> {FormatNum(mainData[0] - mainData[1] - mainData[2])}\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"cards\">\r\n                    <div className=\"topCard\">\r\n                        <div className=\"obrDiv\">\r\n                            <div className=\"circle HP\">\r\n                                <FaPlusCircle color={\"green\"} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"textCard\"> Počet vyliečených</div>\r\n                    </div>\r\n                    <div className=\"mainText\">\r\n                        {FormatNum(mainData[1])}\r\n                        {numberTrans3(mainData[0], mainData[1])}\r\n                    </div>\r\n                </div>\r\n\r\n                <div className=\"cards\">\r\n                    <div className=\"topCard\">\r\n                        <div className=\"obrDiv\">\r\n                            <div className=\"circle skull\">\r\n                                <GiDeathSkull color={\"white\"} />\r\n                            </div>\r\n                        </div>\r\n                        <div className=\"textCard\"> Počet úmrtí</div>\r\n                    </div>\r\n                    <div className=\"mainText\">\r\n                        {FormatNum(mainData[2])}\r\n                        {numberTrans3(mainData[0], mainData[2])}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n\r\n            <DougnatChart dataForGraph={mainData} />\r\n            <br></br>\r\n            <br></br>\r\n\r\n            <div className=\"slovenskeUdaje\"><Link to='/Covid/CovidSK'>Slovenské údaje</Link></div>\r\n            <br></br><br></br>\r\n\r\n            <CovidTable countriesData={countriesData} sortBy={sortBy} />\r\n\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default CovidApp\r\n","function CompareCislo(data, sorting, stlpec) {\r\n    // const [stlpcek, setStlpcek] = useState(stlpec)\r\n    if (stlpec === \"females\") {\r\n        data.sort(compareNum)\r\n        function compareNum(b, a) {\r\n            const A = a.females\r\n            const B = b.females\r\n            if (sorting) {\r\n                if (A > B) {\r\n                    return 1\r\n                } else if (A < B) {\r\n                    return -1\r\n                } else return 0;\r\n            }\r\n            else {\r\n                if (B > A) {\r\n                    return 1\r\n                } else if (B < A) {\r\n                    return -1\r\n                } else return 0;\r\n            }\r\n        }\r\n    }\r\n    else if (stlpec === \"males\") {\r\n        data.sort(compareNum)\r\n        function compareNum(b, a) {\r\n            const A = a.males\r\n            const B = b.males\r\n            if (sorting) {\r\n                if (A > B) {\r\n                    return 1\r\n                } else if (A < B) {\r\n                    return -1\r\n                } else return 0;\r\n            }\r\n            else {\r\n                if (B > A) {\r\n                    return 1\r\n                } else if (B < A) {\r\n                    return -1\r\n                } else return 0;\r\n            }\r\n        }\r\n    }\r\n    else if (stlpec === \"amountRecovered\") {\r\n        data.sort(compareNum)\r\n        function compareNum(b, a) {\r\n            const A = a.amount.recovered\r\n            const B = b.amount.recovered\r\n            if (sorting) {\r\n                if (A > B) {\r\n                    return 1\r\n                } else if (A < B) {\r\n                    return -1\r\n                } else return 0;\r\n            }\r\n            else {\r\n                if (B > A) {\r\n                    return 1\r\n                } else if (B < A) {\r\n                    return -1\r\n                } else return 0;\r\n            }\r\n        }\r\n    }\r\n    else {\r\n        data.sort(compareNum)\r\n        function compareNum(a, b) {\r\n            const A = a.amount.infected\r\n            const B = b.amount.infected\r\n            if (sorting) {\r\n                if (A > B) {\r\n                    return 1\r\n                } else if (A < B) {\r\n                    return -1\r\n                } else return 0;\r\n            }\r\n            else {\r\n                if (B > A) {\r\n                    return 1\r\n                } else if (B < A) {\r\n                    return -1\r\n                } else return 0;\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport default CompareCislo ","import React, { useState, useEffect } from 'react'\r\nimport './tabulkaMesta.css'\r\nimport CompareCislo from './CompareCislo'\r\nimport { IoIosArrowDown } from 'react-icons/io';\r\n\r\n\r\n\r\nfunction TabulkaMesta(props) {\r\n    const data = props.tabulkaData\r\n    const [sorting, setSorting] = useState(false)\r\n    const [ShowHide, setShowHide] = useState({\r\n        display: 'none'\r\n    })\r\n    const [textPreZobrazenieObci, setTextPreZobrazenieObci] = useState({\r\n        boolean: true,\r\n        text: \"Zobraziť údaje o jedntlivých obciach\"\r\n    })\r\n    const [sipkaObce, setSipkaObce] = useState({\r\n        transition: 'all .2s ease-in',\r\n        marginBottom: '-3px',\r\n        marginLeft: '3px',\r\n    })\r\n\r\n\r\n\r\n    // const [sorting, setSorting] = useState(false)\r\n    // console.log(props.tabulkaData)\r\n    // console.log(props.tabulkaData)\r\n    // const [dataTabulka, setDataTabulka] = useState(props.tabulkaData)\r\n    // const [state, setState] = useState({\r\n    //     dataTabulka: dataTabulka,\r\n    //     direction: {\r\n    //         price_usd: 'asc',\r\n    //     }\r\n    // })\r\n\r\n    useEffect(() => {\r\n        setSorting(!sorting)\r\n        CompareCislo(data, sorting, \"stlpec\")\r\n    }, [])\r\n    // useEffect(() => {\r\n    //     setState({\r\n    //         dataTabulka: dataTabulka.sort((a, b) => (\r\n    //             state.direction['cases'] === 'asc'\r\n    //                 ? parseFloat(a['cases']) - parseFloat(b['cases'])\r\n    //                 : parseFloat(b['cases']) - parseFloat(a['cases'])\r\n    //         )),\r\n    //         direction: {\r\n    //             ['cases']: state.direction['cases'] === 'asc'\r\n    //                 ? 'desc'\r\n    //                 : 'asc'\r\n    //         }\r\n    //     })\r\n    // }, [])\r\n\r\n\r\n    // function sortBy(key) {\r\n    //     setState({\r\n    //         dataTabulka: dataTabulka.sort((a, b) => (\r\n    //             state.direction[key] === 'asc'\r\n    //                 ? parseFloat(a[key]) - parseFloat(b[key])\r\n    //                 : parseFloat(b[key]) - parseFloat(a[key])\r\n    //         )),\r\n    //         direction: {\r\n    //             [key]: state.direction[key] === 'asc'\r\n    //                 ? 'desc'\r\n    //                 : 'asc'\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    function handleSortObce(stlpec) {\r\n        setSorting(!sorting)\r\n        CompareCislo(data, sorting, stlpec)\r\n    }\r\n\r\n    function zmenitText() {\r\n        if (textPreZobrazenieObci.boolean) {\r\n            setTextPreZobrazenieObci({\r\n                boolean: !textPreZobrazenieObci.boolean,\r\n                text: \"Schovať údaje o jedntlivých obciach\"\r\n            })\r\n            setShowHide({\r\n                display: 'flex',\r\n            })\r\n            setSipkaObce({\r\n                transform: \"rotateX(180deg)\",\r\n                transition: 'all .2s ease-in',\r\n                marginBottom: '-3px',\r\n                marginLeft: '3px',\r\n            })\r\n        }\r\n        else {\r\n            setTextPreZobrazenieObci({\r\n                boolean: !textPreZobrazenieObci.boolean,\r\n                text: \"Zobraziť údaje o jedntlivých obciach\"\r\n            })\r\n            setShowHide({\r\n                display: 'none',\r\n            })\r\n            setSipkaObce({\r\n                transform: \"rotateX(0deg)\",\r\n                transition: 'all .2s ease-in',\r\n                marginBottom: '-3px',\r\n                marginLeft: '3px',\r\n            })\r\n        }\r\n    }\r\n    return (\r\n        <>\r\n            <div className=\"textPreZObrazenieTabulky\" onClick={zmenitText}>{textPreZobrazenieObci.text} <IoIosArrowDown style={sipkaObce} /></div>\r\n\r\n            <div style={ShowHide} className=\"tabulkaOkrajDivMain\">\r\n                <br></br>\r\n                <div className=\"tabulkaMesta\">\r\n                    <table >\r\n                        <thead>\r\n                            <tr >\r\n                                <th >Obec</th>\r\n                                <th onClick={() => handleSortObce('amoutInfected')} >Počet nakazených</th>\r\n                                <th onClick={() => handleSortObce('amountRecovered')} >Počet vyliečených</th>\r\n                                <th onClick={() => handleSortObce('females')} >Ženy</th>\r\n                                <th onClick={() => handleSortObce('males')} >Muži</th>\r\n                                {/* onClick={() => (data.sortBy.sortBy('males'))} */}\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {data.map((jednaObec, index) => <>\r\n                                <tr key={index} >\r\n                                    <td>{jednaObec.title}</td>\r\n                                    <td>{jednaObec.amount.infected}\r\n                                        <span className=\"plusPreObecInfected\">{jednaObec.amount.infected_delta > 0 ? \"+\" + jednaObec.amount.infected_delta : ''}</span>\r\n                                    </td>\r\n                                    <td><span className=\"plusPreObecRecovered\">{jednaObec.amount.recovered}</span></td>\r\n                                    <td>{jednaObec.females}</td>\r\n                                    <td>{jednaObec.males}</td>\r\n                                </tr>\r\n                            </>\r\n                            )}\r\n                        </tbody>\r\n                        {/* <tfoot>\r\n                        <tr>\r\n                            <td>Sum</td>\r\n                            <td>$180</td>\r\n                        </tr>\r\n                    </tfoot> */}\r\n                    </table>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default TabulkaMesta\r\n","import React, { useState, useEffect } from 'react'\r\nimport CountUp from 'react-countup'\r\nimport styled, { keyframes } from \"styled-components\";\r\nimport './covid.css'\r\n// import './tooltip.css'\r\nimport coronaIcon from \"../imgs/coronaIcon.svg\"\r\nimport wideArrow from \"../imgs/wideArrow.svg\"\r\nimport TabulkaMesta from \"./TabulkaMesta\"\r\n\r\n// import DougnatChart from \"./DougnatChart\"\r\n\r\nfunction CovidSK() {\r\n    const [dataSvk, setDataSvk] = useState()\r\n    const svk = 'https://mapa.covid.chat/map_data'\r\n    // const [tabulkaMestaData, setTabulkaMestaData] = useState([])\r\n    const [maxDate, setMaxDate] = useState()\r\n    const [maxDateboolLean, setMaxDateboolLean] = useState(false)\r\n    const [styleWideArrow, setStyleWideArrow] = useState()\r\n\r\n    const [state, setState] = useState({\r\n        dataSvk: dataSvk,\r\n        direction: {\r\n            price_usd: 'asc',\r\n        }\r\n    })\r\n\r\n    useEffect(() => {\r\n        LoadData()\r\n    }, [])\r\n\r\n    const negatTestyMoje = [83, 102, 50, 42, 120, 129, 118, 197, 228]\r\n\r\n    const LoadData = async () => {\r\n        const response = await fetch(svk)\r\n        const data = await response.json()\r\n        // let maxDatum = Object.keys(data.chart).length - 30\r\n\r\n        setMaxDate(Object.keys(data.chart).length - 28)\r\n\r\n        setDataSvk([data])\r\n        setState({\r\n            dataSvk: data.map.sort((a, b) => (\r\n                state.direction['cases'] === 'asc'\r\n                    ? parseFloat(a['cases']) - parseFloat(b['cases'])\r\n                    : parseFloat(b['cases']) - parseFloat(a['cases'])\r\n            )),\r\n            direction: {\r\n                ['cases']: state.direction['cases'] === 'asc'\r\n                    ? 'desc'\r\n                    : 'asc'\r\n            }\r\n        })\r\n    }\r\n\r\n    function handleData() {\r\n        let a = dataSvk[0].chart[Object.keys(dataSvk[0].tested_chart).length].recovered\r\n        let b = dataSvk[0].chart[Object.keys(dataSvk[0].tested_chart).length - 1].recovered\r\n        let c = a - b\r\n        let newRecovered = 0\r\n        if (c > 0) {\r\n            newRecovered = a - b\r\n        }\r\n\r\n        a = dataSvk[0].chart[Object.keys(dataSvk[0].tested_chart).length].deaths\r\n        b = dataSvk[0].chart[Object.keys(dataSvk[0].tested_chart).length - 1].deaths\r\n        c = a - b\r\n        let newDeaths = 0\r\n        if (c > 0) {\r\n            newDeaths = a - b\r\n        }\r\n\r\n\r\n        return (\r\n            <div>\r\n                <div className=\"cardsDiv\">\r\n                    <div className=\"cards cardsSVK\">\r\n                        <div className=\"topCard\">\r\n                            <div className=\"obrDiv\">\r\n                                <div className=\"circle\">\r\n                                    <img alt=\"\" src={coronaIcon} />\r\n                                </div>\r\n                            </div>\r\n                            <div className=\"textCard\"><b>Slovenské údaje</b></div>\r\n                        </div>\r\n                        <div className=\"mainTextSK\">\r\n                            Počet testovaných: {dataSvk[0].tested}<br />\r\n                                Počet negatívnych testov: {dataSvk[0].tested - dataSvk[0].infected}<br />\r\n                                Počet pozitívnych testov: {dataSvk[0].infected}<br />\r\n                                Počet vyliečených: {dataSvk[0].recovered}<br />\r\n                            {dataSvk[0].deaths > 0 ? <>Počet úmrtií: {dataSvk[0].deaths}<br /></>\r\n                                : null}\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                    <div className=\"cards cardsSVK\">\r\n                        <div className=\"topCard\">\r\n                            <div className=\"textCard\"><b>Údaje za posledný deň<span style={{ color: 'grey', fontSize: '11px' }}> ({dataSvk[0].tested_chart[Object.keys(dataSvk[0].tested_chart).length - 1].day})</span></b></div>\r\n                        </div>\r\n                        <div className=\"mainTextSK\">\r\n                            Počet nových testovaných: <span>{dataSvk[0].tested_chart[Object.keys(dataSvk[0].tested_chart).length - 1].tested}</span><br />\r\n                                Počet negatívnych testov: <span>{dataSvk[0].tested_chart[Object.keys(dataSvk[0].tested_chart).length - 1].tested - dataSvk[0].tested_chart[Object.keys(dataSvk[0].tested_chart).length - 1].infected}</span><br />\r\n                                Počet pozitívnych testov: <span>+{dataSvk[0].tested_chart[Object.keys(dataSvk[0].tested_chart).length - 1].infected}</span>\r\n                            {\r\n                                newRecovered > 0 ?\r\n                                    <> <br />Počet nových vyliečených: {newRecovered}<br /></>\r\n                                    : null\r\n                            }\r\n                            {\r\n                                newDeaths > 0 ?\r\n                                    <> Počet nových úmrtí: {newDeaths}<br /></>\r\n                                    : null\r\n                            }\r\n                        </div>\r\n                    </div>\r\n\r\n\r\n                </div>\r\n\r\n\r\n\r\n\r\n            </div>\r\n        )\r\n    }\r\n    const Heading = keyframes`\r\n    0%{\r\n        height: 0%;\r\n      }\r\n      100%{\r\n        height: 100%;\r\n      }\r\n    `;\r\n\r\n    const HomeHeader = styled.div`\r\n    height: 100%;\r\n    animation: ${Heading} 2s;\r\n    bottom: 0;\r\n    display: flex;\r\n    align-items: center;\r\n    justify-content: space-evenly;\r\n    `;\r\n\r\n    function changeWideArrow() {\r\n        if (!maxDateboolLean) {\r\n            setMaxDate(-1)\r\n            setStyleWideArrow({\r\n                transform: 'rotateY(180deg)',\r\n            })\r\n        }\r\n        else {\r\n            setMaxDate(Object.keys(dataSvk[0].chart).length - 28)\r\n            setStyleWideArrow({\r\n                transform: 'rotateY(0deg)',\r\n            })\r\n        }\r\n        // dataSvk\r\n        setMaxDateboolLean(!maxDateboolLean)\r\n    }\r\n\r\n    function handleGraph1() {\r\n        const MaxInfected = 100 / dataSvk[0].chart[Object.keys(dataSvk[0].chart).length - 1].infected\r\n        return (\r\n            <div className=\"outsideDivGraf\">\r\n                <div className=\"test\" onClick={changeWideArrow} style={styleWideArrow}>\r\n                    <div className=\"wideArrow\">\r\n                        <img alt=\"\" src={wideArrow} />\r\n                    </div>\r\n                </div>\r\n\r\n\r\n                <div className=\"svkGraf\">\r\n\r\n                    {/* <div className=\"tooltip\">Hover over me\r\n                        <div className=\"tooltiptext\">Tooltip text</div>\r\n                        </div> */}\r\n\r\n\r\n                    {\r\n                        dataSvk[0].chart.map((day1, index) =>\r\n                            index > maxDate ?\r\n                                <HomeHeader key={index}>\r\n                                    {/* {console.log(maxDate)} */}\r\n                                    <div className=\"stlpcePrvehoGrafu tooltip\" style={{ height: `calc(${MaxInfected * day1.infected}% )` }} >\r\n                                        <CountUp className=\"CountPrvehoGrafu\" end={parseInt(day1.infected)} />\r\n                                        {dataSvk[0].tested_chart[index - 1]\r\n                                            ? <> <CountUp className=\"countupFirstRed\" prefix=\"+\" end={parseInt(dataSvk[0].tested_chart[index - 1].infected)} />\r\n                                                {/* <div className=\"tooltiptext\">Počet nakazených: {day1.infected} <br />Počet nových nakazených: {dataSvk[0].tested_chart[index - 1].infected}</div> */}\r\n                                            </>\r\n                                            : <><CountUp className=\"countupFirstRed\" prefix=\"+\" end={1} />\r\n                                            </>}\r\n                                        <div className=\"spanDate\">{day1.date}</div>\r\n                                    </div>\r\n                                </HomeHeader>\r\n                                : null\r\n                        )\r\n                    }\r\n                </div>\r\n                <div className=\"medzeraPodDatumomGraf1\"></div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n    function handleGraph2() {\r\n        let MaxDaily = 0\r\n        if (dataSvk) {\r\n            dataSvk[0].tested_chart.map(pom1 => {\r\n                if (pom1.tested > MaxDaily) {\r\n                    MaxDaily = pom1.tested - pom1.infected\r\n                }\r\n            })\r\n            MaxDaily = MaxDaily / 100\r\n        }\r\n        return (\r\n            <div className=\"outsideDivGraf\">\r\n                <div className=\"test\" onClick={changeWideArrow} style={styleWideArrow}>\r\n                    <div className=\"wideArrow\">\r\n                        <img alt=\"\" src={wideArrow} />\r\n                    </div>\r\n                </div>\r\n                <div className=\"svkGraf\">\r\n                    {/* <div className=\"testDElete\"  ></div> */}\r\n                    {maxDate === -1 ?\r\n                        <HomeHeader >  {/* prvy stlpec pre druhy graf */}\r\n                            <div className=\"PozitivneTestyDruhyGraf\" style={{ height: ` 3px` }} >\r\n\r\n                                <div className=\"spanDate\">{\"06-03-2020\"}</div>\r\n                            </div>\r\n                            <div className=\"dayX2 dayX2pom\" style={{ height: `calc(${306 / MaxDaily}% + 3px)` }} >\r\n                                <CountUp className=\"countupX2 CountDruhehoGrafu\" end={306} />\r\n                                <CountUp className=\"countup CountDruhehoGrafu nakazeniZaDen\" prefix=\"+\" end={1} />\r\n                            </div>\r\n                        </HomeHeader>\r\n                        : ''}\r\n\r\n                    {dataSvk[0].tested_chart.map((day1, index) =>\r\n                        index > maxDate - 1 ?\r\n                            <HomeHeader key={index}>\r\n                                {\r\n                                    <>\r\n                                        {day1.infected === 0\r\n                                            ?\r\n                                            <div className=\"PozitivneTestyDruhyGraf\"  >\r\n                                                {/* <CountUp className=\"countup2 CountDruhehoGrafu \" end={day1.infected} /> */}\r\n                                                <div className=\"spanDate\">{day1.date}</div>\r\n                                            </div>\r\n                                            :\r\n                                            <div className=\"PozitivneTestyDruhyGraf\" style={{ height: `calc(${(day1.infected) / MaxDaily}% + 3px)` }} >\r\n                                                <div className=\"spanDate\">{day1.date}</div>\r\n                                            </div>\r\n                                        }\r\n                                        {\r\n                                            negatTestyMoje[index]\r\n                                                ?\r\n                                                <div className=\"dayX2\" style={{ height: `calc(${negatTestyMoje[index] / MaxDaily}% + 3px)` }} >\r\n                                                    {(negatTestyMoje[index] > 99) ? <>\r\n                                                        <CountUp className=\"countupX2 CountDruhehoGrafu\" end={negatTestyMoje[index]} style={{ marginLeft: '-2px' }} />\r\n                                                        <CountUp className=\"countup2 CountDruhehoGrafu nakazeniZaDen\" prefix=\"+\" end={day1.infected} />\r\n                                                    </>\r\n                                                        : <>\r\n                                                            <CountUp className=\"countupX2 CountDruhehoGrafu\" end={negatTestyMoje[index]} />\r\n                                                            <CountUp className=\"countup2 CountDruhehoGrafu nakazeniZaDen\" prefix=\"+\" end={day1.infected} />\r\n                                                        </>\r\n                                                    }\r\n                                                </div>\r\n                                                : <div className=\"dayX2\" style={{ height: `calc(${day1.tested / MaxDaily}% + 3px)` }} >\r\n                                                    <CountUp className=\"countupX2 CountDruhehoGrafu\" end={day1.tested - day1.infected} />\r\n                                                    <CountUp className=\"countup2 CountDruhehoGrafu nakazeniZaDen\" prefix=\"+\" end={day1.infected} />\r\n                                                </div>\r\n                                        }\r\n                                    </>\r\n                                }\r\n                            </HomeHeader>\r\n                            : ''\r\n                    )}\r\n                </div>\r\n                <div className=\"vysvetlivkyPodGrafom\">\r\n                    <div><div className=\"blue\"></div>Počet negatívnych testov</div>\r\n                    <div><div className=\"red\"></div>Počet pozitívnych testov</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\n\r\n    function sortBy(key) {\r\n        setState({\r\n            dataSvk: dataSvk[0].map.sort((a, b) => (\r\n\r\n                state.direction[key] === 'asc'\r\n                    ? parseFloat(a[key]) - parseFloat(b[key])\r\n                    : <>{parseFloat(b[key]) - parseFloat(a[key])} </>\r\n            )),\r\n            direction: {\r\n                [key]: state.direction[key] === 'asc'\r\n                    ? 'desc'\r\n                    : 'asc'\r\n            }\r\n        })\r\n    }\r\n    return (\r\n        <div className=\"covidApp\">\r\n            {\r\n                dataSvk\r\n                    ? <>\r\n                        {handleData()}\r\n                        <TabulkaMesta tabulkaData={dataSvk[0].map} sortBy={sortBy} />\r\n\r\n                        {/* <div className=\"tooltip\">Hover over me\r\n                        <div className=\"tooltiptext\">Tooltip text</div>\r\n                        </div> */}\r\n                        {/* <DougnatChart /> */}\r\n\r\n                        {handleGraph1()}\r\n                        {handleGraph2()}\r\n                    </>\r\n                    : ''\r\n\r\n\r\n            }\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default CovidSK\r\n","import React from 'react'\r\n\r\nfunction Todo({ todo, toggleTodo }) {\r\n\r\n    function handleTodoClick() {\r\n        toggleTodo(todo.id)\r\n    }\r\n    function handleTodoClick2() {\r\n    }\r\n\r\n    function handleFormatTime(time) {\r\n        var month = time.slice(-4, -2)\r\n        var year = time.slice(-8, -4)\r\n        var day = time.slice(-2)\r\n        return (day + \".\" + month + \".\" + year)\r\n    }\r\n    return (\r\n        <div onClick={handleTodoClick}>\r\n            <div className=\"todoList\">\r\n                <div className=\"naLavo\">{handleFormatTime(todo.time)}</div>\r\n                <input className=\"checkboX\" type=\"checkbox\" onChange={handleTodoClick2} checked={todo.complete} />\r\n                <div style={{ textDecoration: todo.complete ? 'line-through' : '' }}>{todo.name}</div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Todo\r\n","import React from 'react'\r\nimport Todo from './Todo'\r\nexport default function HandleTodo({ todos, toggleTodo, time }) {\r\n    return (<>\r\n        {todos.map((todo) => {\r\n            return (\r\n                <Todo key={todo.id} todo={todo} toggleTodo={toggleTodo} time={time} />\r\n            )\r\n        })}\r\n    </>)\r\n}\r\n","function CompareCislo(todos, casSort) {\r\n    todos.sort(compareNum)\r\n    function compareNum(a, b) {\r\n        const A = a.time\r\n        const B = b.time\r\n        if (casSort) {\r\n            if (A > B) {\r\n                return 1\r\n            } else if (A < B) {\r\n                return -1\r\n            } else return 0;\r\n        }\r\n        else {\r\n            if (B > A) {\r\n                return 1\r\n            } else if (B < A) {\r\n                return -1\r\n            } else return 0;\r\n        }\r\n    }\r\n}\r\n\r\nexport default CompareCislo ","import React, { useState, useRef, useEffect } from 'react'\r\nimport uuidV4 from 'uuid/v4'\r\nimport './Todo.css'\r\nimport HandleTodo from './HandleTodo'\r\nimport CompareCislo from './CompareCislo'\r\nimport DatePicker from 'react-datepicker'\r\nimport 'react-datepicker/dist/react-datepicker.css'\r\n\r\nconst LOCAL_STORAGE_KEY = 'todoApp.todos'\r\n\r\n\r\nfunction TodoApp() {\r\n\r\n    const [todos, setTodos] = useState([])\r\n    const todoNameRef = useRef()\r\n    const [casSort, setCasSort] = useState(false)\r\n\r\n    const [selectedDate, setSelectedDate] = useState(null)\r\n    const [myStyle, setMyStyle] = useState({ display: 'none' })\r\n\r\n    useEffect(() => {\r\n        const storedTodos = JSON.parse(localStorage.getItem(LOCAL_STORAGE_KEY))\r\n        if (storedTodos) setTodos(storedTodos)\r\n        handleNumberTime()\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n    function toggleTodo(id) {\r\n        const newTodos = [...todos]\r\n        const todo = newTodos.find(todo => todo.id === id)\r\n        todo.complete = !todo.complete\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    function handleAddTodo(e) {\r\n        e.preventDefault()\r\n        const name = todoNameRef.current.value\r\n        if (selectedDate) {\r\n            var d = selectedDate\r\n            var dateFullNumber = d.getFullYear() + (\"0\" + (d.getMonth() + 1)).slice(-2) + (\"0\" + d.getDate()).slice(-2)\r\n        }\r\n\r\n        if (!name || !dateFullNumber) {\r\n            setMyStyle({ display: 'block' })\r\n        }\r\n        else {\r\n            setMyStyle({ display: 'none' })\r\n            setTodos(prev => {\r\n                return [...prev, { id: uuidV4(), name: name, complete: false, time: dateFullNumber }]\r\n            })\r\n            todoNameRef.current.value = null\r\n            setSelectedDate(null)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    function handleClearTodos(e) {\r\n        e.preventDefault()\r\n        const newTodos = todos.filter(todo => !todo.complete)\r\n        setTodos(newTodos)\r\n    }\r\n\r\n    function handleRemoveAllTodos(e) {\r\n        e.preventDefault()\r\n\r\n        if (window.confirm('Are u sure?')) {\r\n            setTodos([])\r\n        }\r\n    }\r\n\r\n\r\n    function handleNumberTime() {\r\n        setCasSort(!casSort)\r\n        CompareCislo(todos, casSort)\r\n        localStorage.setItem(LOCAL_STORAGE_KEY, JSON.stringify(todos))\r\n    }\r\n\r\n\r\n\r\n    return (\r\n        <div className=\"TodoMain\">\r\n            <h1>Todo APP</h1>\r\n            <div className=\"todo\">\r\n\r\n                <HandleTodo todos={todos} toggleTodo={toggleTodo} />\r\n                <form className=\"\">\r\n                    <input placeholder=\"Pridať nové TODO\" className=\"inputTodo\" ref={todoNameRef} type=\"text\" />\r\n                    <div className=\"divForDatePicker\">\r\n                        <DatePicker style={{ width: '100%' }} className=\"datePicker\"\r\n                            selected={selectedDate}\r\n                            onChange={date => setSelectedDate(date)}\r\n                            dateFormat='dd/MM/yyyy'\r\n                            isClearable\r\n                            placeholderText=\"Dokedy\"\r\n                        />\r\n                    </div>\r\n                    <div className=\"musisVyplnitObePolia\" style={myStyle}>musiš vyplniť obe polia</div>\r\n                    <button className=\"btn btn1\" onClick={handleAddTodo}>Pridať</button>\r\n                    <button className=\"btn btn2\" onClick={handleClearTodos}>Odstraniť hotové</button>\r\n                    <button className=\"btn btnDel\" onClick={handleRemoveAllTodos}>Odstraniť všetky</button>\r\n                    {/* <button className=\"btn btn2\" onClick={handleNumber}>Zoradiť podľa názvu</button> */}\r\n                    <button className=\"btn btn2\" style={{ width: '100%' }} onClick={handleNumberTime}>Zoradiť podľa dátumu</button>\r\n                    {/* <button className=\"btn btn1\" onClick={hadnleSortComplete}>Zoradiť podľa dokončenia</button> */}\r\n                </form>\r\n\r\n                {\r\n                    (todos.length > 0 && todos.filter(todo => !todo.complete).length !== 0)\r\n                        ? <div className=\"nesplnene\">{todos.filter(todo => !todo.complete).length} nesplnené</div>\r\n                        : <div className=\"nesplnene splnene\">Všetky todo splnené</div>\r\n                }\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoApp\r\n","import React from 'react';\nimport './App.css';\nimport Nav from './Nav';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport CovidApp from './Covid/CovidApp';\nimport CovidSK from './Covid/CovidSK';\nimport TodoApp from './Todo/TodoApp';\nimport { polyfill } from 'es6-promise'; polyfill();\nrequire('es6-promise').polyfill();\nrequire('isomorphic-fetch');\n\n\nfunction App() {\n\n\n  return (\n    <Router basename=\"/\">\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/\" component={CovidApp} exact />\n          <Route path=\"/Covid/CovidApp\" component={CovidApp} />\n          <Route path=\"/Covid/CovidSK\" component={CovidSK} />\n          <Route path=\"/Todo\" component={TodoApp} />\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/coronaIcon.02ed3e1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/wideArrow.d20604a8.svg\";"],"sourceRoot":""}