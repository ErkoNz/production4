{"version":3,"sources":["Covid/FormatNumber.js","Nav.js","Covid/PrvyRiadokTabulky.js","Covid/SvetTabulka.js","Covid/DougnatChart.js","Covid/CovidApp.js","App.js","index.js","imgs/coronaIcon.svg","imgs/earth.svg","imgs/slovakiaIcon.svg"],"names":["FormatNumber","num","prop","toString","replace","Nav","navStyle","color","className","style","to","alt","src","earthIcon","slovakiaIcon","PrvyRiadokTabulky","props","useState","dataKontinenty","setDataKontinenty","doTabulkyPrvyRiadok","setDoTabulkyPrvyRiadok","sipkyDole","setSipkyDole","transition","marginBottom","marginLeft","sipkaKontinenty","setSipkaKontinenty","position","left","styleForRollDown","setStyleForRollDown","useEffect","axios","get","then","res","data","result","filter","obj","continent","kontinent","mainData","console","log","key","background","width","onClick","transform","tests","cases","active","todayCases","deaths","fontWeight","todayDeaths","recovered","map","oneKontinent","id","SvetTabulka","ikonka","setIkonka","setKontinent","scrollPerformance","setScrollPerformance","zmenIkonku","myStyle2","window","addEventListener","document","querySelector","getBoundingClientRect","y","greenBackgroundforTR","type","onKeyUp","tr","td","i","getElementById","value","toUpperCase","getElementsByTagName","length","textContent","innerText","indexOf","display","placeholder","prevKontinent","sortBy","countriesData","item","country","textDecoration","htmlFor","DougnatChart","labels","datasets","label","dataForGraph","backgroundColor","height","options","maintainAspectRatio","animation","duration","easing","CovidApp","setMainData","doughnatData","setDoughnatData","setCountriesData","direction","price_usd","state","setState","numberTrans3","a","b","output","toFixed","fetch","response1","json","data1","response","sort","parseFloat","fetchData","coronaIcon","CovidSK","React","lazy","App","basename","path","component","exact","ReactDOM","render","module","exports"],"mappings":"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","file":"static/js/main.b71af247.chunk.js","sourcesContent":["function FormatNumber(num) {\r\n    if (num && num.prop > 999) {\r\n        return num.prop.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n    }\r\n    else if (num) { return num.prop }\r\n    else { return null }\r\n}\r\n\r\nexport default FormatNumber\r\n","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './nav.css'\r\nimport earthIcon from \"./imgs/earth.svg\"\r\nimport slovakiaIcon from \"./imgs/slovakiaIcon.svg\"\r\n\r\nfunction Nav() {\r\n\r\n    let navStyle = {\r\n        color: 'white',\r\n    }\r\n\r\n    // function doubleClickFC() {\r\n    //     window.location.href = \"#/Todo\"\r\n    // }\r\n\r\n    return (\r\n        <nav className=\"navApp\" >\r\n            {/* <div className=\"doubleClick\" onClick={doubleClickFC}></div> */}\r\n            <ul className=\"navLinks\">\r\n                <li>\r\n                    <Link style={navStyle} to='/Covid/CovidApp'>\r\n                        <div>\r\n                            <img alt=\"\" src={earthIcon} className=\"earthIcon\" />Covid vo svete\r\n                        </div>\r\n                    </Link>\r\n                </li>\r\n                <li>\r\n                    <Link style={navStyle} to='/Covid/CovidSK'>\r\n                        <div>\r\n                            <img alt=\"\" src={slovakiaIcon} className=\"svkIcon\" />Covid na Slovensku\r\n                        </div>\r\n                    </Link>\r\n                </li>\r\n            </ul>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport FormatNumber from './FormatNumber'\r\nimport { IoIosArrowUp } from 'react-icons/io';\r\n\r\nfunction PrvyRiadokTabulky(props) {\r\n    // console.log(props)\r\n    const [dataKontinenty, setDataKontinenty] = useState()\r\n    const [doTabulkyPrvyRiadok, setDoTabulkyPrvyRiadok] = useState()\r\n    const [sipkyDole, setSipkyDole] = useState(true)\r\n    const [sipkaKontinenty, setSipkaKontinenty] = useState({\r\n        transition: 'all .2s ease-in',\r\n        marginBottom: '-3px',\r\n        marginLeft: '3px',\r\n    })\r\n    const [styleForRollDown, setStyleForRollDown] = useState({\r\n        position: 'absolute',\r\n        left: '-1000px',\r\n        transition: 'all .2s ease-in',\r\n        // fontSize: '15px',\r\n    })\r\n\r\n    useEffect(() => {\r\n        axios.get(`https://disease.sh/v2/continents`)\r\n            .then(res => {\r\n                setDataKontinenty([res.data])\r\n            })\r\n\r\n        // const fetchData = async () => {\r\n        //     let result = await fetch(\"https://disease.sh/v2/continents\");\r\n        //     let response = await result.json();\r\n        //     setDataKontinenty([response]);\r\n        // };\r\n        // fetchData();\r\n\r\n        // console.log(pom1)\r\n        // if (pom1) {\r\n        //     let result = pom1.filter(obj => {\r\n        //         return obj.continent === props.kontinent\r\n        //     })\r\n        //     console.log(result[0])\r\n        //     setDoTabulkyPrvyRiadok(result[0])\r\n        //     console.log(\"asdasdasdasdadadadadasd\")\r\n        // }\r\n\r\n        if (dataKontinenty) {\r\n            let result = dataKontinenty[0].filter(obj => {\r\n                return obj.continent === props.kontinent\r\n            })\r\n            setDoTabulkyPrvyRiadok(result[0])\r\n        }\r\n    }, [props.kontinent])\r\n\r\n\r\n    const rollDownContintinents = () => {\r\n        setSipkyDole(!sipkyDole)\r\n        if (sipkyDole) {\r\n            setSipkaKontinenty({\r\n                transform: \"rotate(180deg)\",\r\n                transition: 'all .2s ease-in',\r\n                marginBottom: '-3px',\r\n                marginLeft: '3px',\r\n            })\r\n            setStyleForRollDown({\r\n                // background: 'rgb(234, 234, 234)',\r\n                // fontSize: '15px',\r\n                transition: 'all .2s ease-in',\r\n            })\r\n        }\r\n        else {\r\n            setStyleForRollDown({\r\n                position: 'absolute',\r\n                left: '-1000px',\r\n                transition: 'all .2s ease-in',\r\n                // fontSize: '15px',\r\n            })\r\n\r\n            setSipkaKontinenty({\r\n                transform: \"rotate(0deg)\",\r\n                transition: 'all .2s ease-in',\r\n                marginBottom: '-3px',\r\n                marginLeft: '3px',\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        styleForRollDown && dataKontinenty && sipkaKontinenty && styleForRollDown && props.mainData && props ?\r\n            <>\r\n                {console.log(\"PrvyRiadokTabulky\")}\r\n                {/* {console.log(styleForRollDown, dataKontinenty, sipkaKontinenty, styleForRollDown, props.mainData, props)} */}\r\n                {props.kontinent === \"Svet\" ?\r\n                    <>\r\n                        <tr key={-1} style={{ background: 'rgb(234, 234, 234)' }} >\r\n                            <td style={{ width: '100px' }}\r\n                                onClick={rollDownContintinents}>\r\n                                Celý Svet <IoIosArrowUp style={sipkaKontinenty} />\r\n                                <div className=\"firstCase\">Počet testov: <div className=\"firstCaseNumber\"><FormatNumber prop={props.mainData[0].tests} /></div></div>\r\n                            </td>\r\n                            <td><FormatNumber prop={props.mainData[0].cases} /></td>\r\n                            <td><FormatNumber prop={props.mainData[0].active} /></td>\r\n                            <td style={{ background: ' rgb(254, 255, 194, .4)' }}>+<FormatNumber prop={props.mainData[0].todayCases} /></td>\r\n                            <td><FormatNumber prop={props.mainData[0].deaths} /></td>\r\n                            <td style={{ color: ' rgba(156, 20, 20, 0.849)', fontWeight: 'bold' }}>+<FormatNumber prop={props.mainData[0].todayDeaths} /></td>\r\n                            <td style={{ fontWeight: 'bold', color: '#006600' }}><FormatNumber prop={props.mainData[0].recovered} /></td>\r\n                        </tr>\r\n                        {\r\n                            dataKontinenty[0].map((oneKontinent, id) => (\r\n                                <tr key={id} className=\"zrolovaneKontinenty\" style={styleForRollDown} >\r\n                                    <td style={{ width: '100px' }}>\r\n                                        {oneKontinent.continent}\r\n                                        <div className=\"firstCase\">Počet testov: <div className=\"firstCaseNumber\"><FormatNumber prop={oneKontinent.tests} /></div></div>\r\n                                    </td>\r\n                                    <td><FormatNumber prop={oneKontinent.cases} /></td>\r\n                                    <td><FormatNumber prop={oneKontinent.active} /></td>\r\n                                    <td style={{ background: ' rgb(254, 255, 194, .4)' }}>+<FormatNumber prop={oneKontinent.todayCases} /></td>\r\n                                    <td><FormatNumber prop={oneKontinent.deaths} /></td>\r\n                                    <td style={{ color: ' rgba(156, 20, 20, 0.849)', fontWeight: 'bold' }}>+<FormatNumber prop={oneKontinent.todayDeaths} /></td>\r\n                                    <td style={{ fontWeight: 'bold', color: '#006600' }}><FormatNumber prop={oneKontinent.recovered} /></td>\r\n                                </tr>\r\n                            ))\r\n                        }\r\n                    </>\r\n                    :\r\n                    <>\r\n                        {doTabulkyPrvyRiadok ?\r\n                            <tr key={-10} style={{ background: 'rgb(234, 234, 234)' }} >\r\n                                <td style={{ width: '100px' }}>\r\n                                    {doTabulkyPrvyRiadok.continent}\r\n                                    <div className=\"firstCase\">Počet testov: <div className=\"firstCaseNumber\"><FormatNumber prop={doTabulkyPrvyRiadok.tests} /></div></div>\r\n                                </td>\r\n                                <td><FormatNumber prop={doTabulkyPrvyRiadok.cases} /></td>\r\n                                <td><FormatNumber prop={doTabulkyPrvyRiadok.active} /></td>\r\n                                <td style={{ background: ' rgb(254, 255, 194, .4)' }}>+<FormatNumber prop={doTabulkyPrvyRiadok.todayCases} /></td>\r\n                                <td><FormatNumber prop={doTabulkyPrvyRiadok.deaths} /></td>\r\n                                <td style={{ color: ' rgba(156, 20, 20, 0.849)', fontWeight: 'bold' }}>+<FormatNumber prop={doTabulkyPrvyRiadok.todayDeaths} /></td>\r\n                                <td style={{ fontWeight: 'bold', color: '#006600' }}><FormatNumber prop={doTabulkyPrvyRiadok.recovered} /></td>\r\n                            </tr>\r\n                            : null}\r\n                    </>\r\n                }\r\n            </>\r\n            : null\r\n    )\r\n}\r\n\r\nexport default PrvyRiadokTabulky\r\n","import React, { useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { FaSortAmountDown } from 'react-icons/fa';\r\nimport PrvyRiadokTabulky from './PrvyRiadokTabulky';\r\nimport FormatNumber from './FormatNumber'\r\nimport './css/TabulkaSvet.css'\r\n\r\n\r\nfunction SvetTabulka(props) {\r\n    const [ikonka, setIkonka] = useState('cases')\r\n    const [kontinent, setKontinent] = useState(\"Svet\")\r\n    const [scrollPerformance, setScrollPerformance] = useState(false)\r\n\r\n    function zmenIkonku(key) {\r\n        if (key === ikonka) {\r\n            setIkonka(key + \"2\")\r\n        }\r\n        else { setIkonka(key) }\r\n    }\r\n\r\n    const myStyle2 = {\r\n        transform: \"rotateX(180deg)\",\r\n    }\r\n\r\n    // useEffect(() => {\r\n    //     axios.get(`https://disease.sh/v2/continents`)\r\n    //         .then(res => {\r\n    //             setDataKontinenty([res.data])\r\n    //             // console.log(res.data)\r\n    //         })\r\n    // }, [])\r\n\r\n\r\n    const myFunction = () => {\r\n        var input, filter, table, tr, td, i, txtValue;\r\n        input = document.getElementById(\"myInput\");\r\n        filter = input.value.toUpperCase();\r\n        table = document.getElementById(\"myTable\");\r\n        tr = table.getElementsByTagName(\"tr\");\r\n        for (i = 0; i < tr.length; i++) {\r\n            td = tr[i].getElementsByTagName(\"td\")[0];\r\n            if (td) {\r\n                txtValue = td.textContent || td.innerText;\r\n                if (txtValue.toUpperCase().indexOf(filter) > -1) {\r\n                    tr[i].style.display = \"\";\r\n                } else {\r\n                    tr[i].style.display = \"none\";\r\n                }\r\n            }\r\n        }\r\n    }\r\n\r\n    window.addEventListener('scroll', function () {\r\n        if (document.querySelector('.scrollingSvet')) {\r\n            if (document.querySelector('.scrollingSvet').getBoundingClientRect().y < 170)\r\n                setScrollPerformance(true)\r\n        }\r\n    });\r\n\r\n    const greenBackgroundforTR = (active) => {\r\n        if (active)\r\n            return null\r\n        else\r\n            return ({ background: 'rgb(190, 245, 204)' })\r\n    }\r\n\r\n    return (\r\n        ikonka && kontinent && props ?\r\n            <>\r\n                {console.log(\"svetTabulka\")}\r\n                <input type=\"text\" id=\"myInput\" onKeyUp={myFunction} placeholder=\"Hľadať..\" className=\"inputSearch\" />\r\n                <div className=\"kontinenty\">\r\n                    <button onClick={() => setKontinent(prevKontinent => { return \"Svet\" })}>\r\n                        Svet\r\n                </button>\r\n                    <button onClick={() => setKontinent(prevKontinent => { return \"Europe\" })}>\r\n                        Európa\r\n                </button>\r\n                    <button onClick={() => setKontinent(prevKontinent => { return \"North America\" })}>\r\n                        Severná Amerika\r\n                </button>\r\n                    <button onClick={() => setKontinent(prevKontinent => { return \"Asia\" })}>\r\n                        Ázia\r\n                </button>\r\n                    <button onClick={() => setKontinent(prevKontinent => { return \"South America\" })}>\r\n                        Južná Amerika\r\n                </button>\r\n                    <button onClick={() => setKontinent(prevKontinent => { return \"Africa\" })}>\r\n                        Afrika\r\n                </button>\r\n                    <button onClick={() => setKontinent(prevKontinent => { return \"Australia/Oceania\" })}>\r\n                        Austrália/Oceánia\r\n                </button>\r\n                </div>\r\n                <div className=\"divTable\" >\r\n                    <table id=\"myTable\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th onClick={() => (props.sortBy(\"tests\") || zmenIkonku(\"tests\"))} >\r\n                                    Krajina\r\n                            {ikonka === \"tests\"\r\n                                        ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                    {ikonka === \"tests2\"\r\n                                        ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                </th>\r\n                                <th onClick={() => (props.sortBy('cases') || zmenIkonku('cases'))} >\r\n                                    Počet nakazených\r\n                            {ikonka === \"cases\"\r\n                                        ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                    {ikonka === \"cases2\"\r\n                                        ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                </th>\r\n                                <th onClick={() => (props.sortBy(\"active\") || zmenIkonku(\"active\"))} >\r\n                                    Aktívne prípady\r\n                            {ikonka === \"active\"\r\n                                        ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                    {ikonka === \"active2\"\r\n                                        ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                </th>\r\n                                <th onClick={() => (props.sortBy(\"todayCases\") || zmenIkonku(\"todayCases\"))} >\r\n                                    Nové prípady\r\n                            {ikonka === \"todayCases\"\r\n                                        ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                    {ikonka === \"todayCases2\"\r\n                                        ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                </th>\r\n                                <th onClick={() => (props.sortBy(\"deaths\") || zmenIkonku(\"deaths\"))} >\r\n                                    Počet úmrtí\r\n                            {ikonka === \"deaths\"\r\n                                        ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                    {ikonka === \"deaths2\"\r\n                                        ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                </th>\r\n                                <th onClick={() => (props.sortBy(\"todayDeaths\") || zmenIkonku(\"todayDeaths\"))} >\r\n                                    Nové úmrtia\r\n                            {ikonka === \"todayDeaths\"\r\n                                        ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                    {ikonka === \"todayDeaths2\"\r\n                                        ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                </th>\r\n                                <th onClick={() => (props.sortBy(\"recovered\") || zmenIkonku(\"recovered\"))} >\r\n                                    Počet vyliečených\r\n                            {ikonka === \"recovered\"\r\n                                        ? <FaSortAmountDown className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                    {ikonka === \"recovered2\"\r\n                                        ? <FaSortAmountDown style={myStyle2} className=\"sortIcon\" />\r\n                                        : null\r\n                                    }\r\n                                </th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {console.log(\"tbodyyyy\")}\r\n\r\n                            <PrvyRiadokTabulky kontinent={kontinent} mainData={props.mainData} />\r\n\r\n                            {kontinent === \"Svet\" ?\r\n                                <>\r\n                                    {props.countriesData.map((item, id) => (\r\n                                        scrollPerformance || id < 20 ?\r\n                                            <tr className=\"scrollingSvet\" key={id} style={greenBackgroundforTR(item.active)}>\r\n                                                <td style={{ width: '100px' }}>{item.country}\r\n                                                    {item.tests > 0 ?\r\n                                                        <div className=\"firstCase\">Počet testov:\r\n                                        <div className=\"firstCaseNumber\">\r\n                                                                <FormatNumber prop={item.tests} />\r\n                                                            </div>\r\n                                                        </div>\r\n                                                        : null}\r\n                                                </td>\r\n                                                <td><FormatNumber prop={item.cases} /></td>\r\n                                                <td>{item.active ? <FormatNumber prop={item.active} /> : \"0\"}</td>\r\n\r\n                                                {item.todayCases > 0 ?\r\n                                                    <td style={{ background: ' rgb(254, 255, 194)' }}>+<FormatNumber prop={item.todayCases} /> </td>\r\n                                                    : <td></td>\r\n                                                }\r\n                                                <td><FormatNumber prop={item.deaths} /></td>\r\n                                                {item.todayDeaths > 0 ?\r\n                                                    <td style={{ color: ' rgba(156, 20, 20, 0.849)', fontWeight: 'bold' }}>+<FormatNumber prop={item.todayDeaths} /> </td>\r\n                                                    : <td></td>\r\n                                                }\r\n                                                <td style={{ fontWeight: 'bold', color: '#006600' }}><FormatNumber prop={item.recovered} /></td>\r\n                                            </tr>\r\n                                            : null\r\n                                    ))\r\n                                    }\r\n                                </>\r\n                                :\r\n                                props.countriesData.map((item, id) => (\r\n                                    item.continent === kontinent ?\r\n                                        <tr key={id} style={greenBackgroundforTR(item.active)}>\r\n                                            <td style={{ width: '100px' }}>\r\n                                                {item.country === 'Slovakia' ?\r\n                                                    <div style={{ fontWeight: 'bold', textDecoration: 'underline' }}>\r\n                                                        <Link to='/Covid/CovidSK'>{item.country}</Link>\r\n                                                    </div>\r\n                                                    : item.country\r\n                                                }\r\n                                                {item.tests > 0 ?\r\n                                                    <div className=\"firstCase\">Počet testov:\r\n                                                    <div className=\"firstCaseNumber\">\r\n                                                            <FormatNumber prop={item.tests} />\r\n                                                        </div>\r\n                                                    </div>\r\n                                                    : null}\r\n                                            </td>\r\n                                            <td><FormatNumber prop={item.cases} /></td>\r\n                                            <td>{item.active ? <FormatNumber prop={item.active} /> : \"0\"}</td>\r\n                                            {item.todayCases > 0 ?\r\n                                                <td style={{ background: ' rgb(254, 255, 194)' }}>+<FormatNumber prop={item.todayCases} /> </td>\r\n                                                : <td></td>\r\n                                            }\r\n                                            <td><FormatNumber prop={item.deaths} /></td>\r\n                                            {item.todayDeaths > 0 ?\r\n                                                <td style={{ color: ' rgba(156, 20, 20, 0.849)', fontWeight: 'bold' }}>+<FormatNumber prop={item.todayDeaths} /> </td>\r\n                                                : <td></td>\r\n                                            }\r\n                                            <td style={{ fontWeight: 'bold', color: 'green' }}><FormatNumber prop={item.recovered} /></td>\r\n                                        </tr>\r\n                                        : null\r\n                                ))\r\n                            }\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n                            {/* {\r\n                        props.countriesData.map((item, id) => (\r\n                            <>\r\n                                {item.continent === kontinent ?\r\n                            <tr key={id} style={greenBackgroundforTR(item.active)}>\r\n                                <td style={{ width: '100px' }}>\r\n                                    {item.country === 'Slovakia' ?\r\n                                        <div style={{ fontWeight: 'bold', textDecoration: 'underline' }}>\r\n                                            <Link to='/Covid/CovidSK'>{item.country}</Link>\r\n                                        </div>\r\n                                        : item.country\r\n                                    }\r\n                                    {item.tests > 0 ?\r\n                                        <div className=\"firstCase\">Počet testov:\r\n                                                    <div className=\"firstCaseNumber\">\r\n                                                <FormatNumber prop={item.tests} />\r\n                                            </div>\r\n                                        </div>\r\n                                        : null}\r\n                                </td>\r\n                                <td><FormatNumber prop={item.cases} /></td>\r\n                                <td>{item.active ? <FormatNumber prop={item.active} /> : \"0\"}</td>\r\n                                {item.todayCases > 0 ?\r\n                                    <td style={{ background: ' rgb(254, 255, 194)' }}>+<FormatNumber prop={item.todayCases} /> </td>\r\n                                    : <td></td>\r\n                                }\r\n                                <td><FormatNumber prop={item.deaths} /></td>\r\n                                {item.todayDeaths > 0 ?\r\n                                    <td style={{ color: ' rgba(156, 20, 20, 0.849)', fontWeight: 'bold' }}>+<FormatNumber prop={item.todayDeaths} /> </td>\r\n                                    : <td></td>\r\n                                }\r\n                                <td style={{ fontWeight: 'bold', color: 'green' }}><FormatNumber prop={item.recovered} /></td>\r\n                            </tr>\r\n                                    :\r\n                                    kontinent === \"Svet\" ?\r\n                            <tr key={id} style={greenBackgroundforTR(item.active)}>\r\n                                <td style={{ width: '100px' }}>\r\n                                    {item.country === 'Slovakia' ?\r\n                                        <div style={{ fontWeight: 'bold', textDecoration: 'underline' }}>\r\n                                            <Link to='/Covid/CovidSK'>{item.country}</Link>\r\n                                        </div>\r\n                                        : item.country\r\n                                    }\r\n                                    {item.tests > 0 ?\r\n                                        <div className=\"firstCase\">Počet testov:\r\n                                                    <div className=\"firstCaseNumber\">\r\n                                                <FormatNumber prop={item.tests} />\r\n                                            </div>\r\n                                        </div>\r\n                                        : null}\r\n                                </td>\r\n\r\n                                <td><FormatNumber prop={item.cases} /></td>\r\n                                <td>{item.active ? <FormatNumber prop={item.active} /> : \"0\"}</td>\r\n\r\n                                {item.todayCases > 0 ?\r\n                                    <td style={{ background: ' rgb(254, 255, 194)' }}>+<FormatNumber prop={item.todayCases} /> </td>\r\n                                    : <td></td>\r\n                                }\r\n                                <td><FormatNumber prop={item.deaths} /></td>\r\n                                {item.todayDeaths > 0 ?\r\n                                    <td style={{ color: ' rgba(156, 20, 20, 0.849)', fontWeight: 'bold' }}>+<FormatNumber prop={item.todayDeaths} /> </td>\r\n                                    : <td></td>\r\n                                }\r\n                                <td style={{ fontWeight: 'bold', color: 'green' }}><FormatNumber prop={item.recovered} /></td>\r\n                            </tr>\r\n                            : null\r\n                                }\r\n                            </>\r\n                        ))} */}\r\n                        </tbody>\r\n                    </table>\r\n                    <label htmlFor=\"myInput\">.</label>\r\n                </div>\r\n            </>\r\n            : null\r\n    )\r\n}\r\n\r\nexport default SvetTabulka","import React from 'react'\r\nimport { Doughnut } from 'react-chartjs-2';\r\nimport './css/csspreSvk.css'\r\nfunction DougnatChart(props) {\r\n    const data = {\r\n        labels: ['Nakazení', 'Vyliečení', 'Úmrtia'],\r\n        datasets: [{\r\n            label: '# of Votes',\r\n            data: props.dataForGraph,\r\n            backgroundColor: [\r\n                '#f85959',\r\n                '#17b978',\r\n                '#430d27',\r\n            ],\r\n        }]\r\n    }\r\n\r\n    // const data = {\r\n    //     labels: props.dataForGraph.labels,\r\n    //     datasets: [{\r\n    //         label: '# of Votes',\r\n    //         data: props.dataForGraph.data,\r\n    //         backgroundColor: props.dataForGraph.backgroundColor,\r\n    //     }]\r\n    // }\r\n\r\n    // const data = {\r\n    //     labels: ['Nakazení', 'Vyliečení'],\r\n    //     datasets: [{\r\n    //         label: '# of Votes',\r\n    //         data: [10, 20],\r\n    //         backgroundColor: ['red', 'blue'],\r\n    //     }]\r\n    // }\r\n\r\n\r\n    return (\r\n        props && data ?\r\n            <div>\r\n                {console.log(\"DougnatChart\")}\r\n\r\n                <div className=\"dougnut\">\r\n                    <Doughnut\r\n                        data={data}\r\n                        height={300}\r\n                        options={{\r\n                            maintainAspectRatio: false,\r\n                            animation: { duration: 2000, easing: 'easeOutQuint' }\r\n                        }}\r\n                    />\r\n\r\n\r\n                </div>\r\n\r\n            </div>\r\n            : null\r\n    )\r\n}\r\n\r\nexport default DougnatChart\r\n","import React, { useState, useEffect } from 'react'\r\nimport './css/covid.css'\r\nimport './css/covidDesign.css'\r\nimport { Link } from 'react-router-dom'\r\nimport coronaIcon from \"../imgs/coronaIcon.svg\"\r\n// import CovidTable from \"./CovidTable\"\r\nimport SvetTabulka from \"./SvetTabulka\"\r\nimport { GiDeathSkull } from \"react-icons/gi\";\r\nimport { AiOutlineDoubleRight } from \"react-icons/ai\";\r\nimport { FaPlusCircle } from \"react-icons/fa\";\r\nimport DougnatChart from \"./DougnatChart\"\r\n// import DataGrid from \"./DataGrid\"\r\nimport FormatNumber from './FormatNumber'\r\n\r\nfunction CovidApp() {\r\n    const [mainData, setMainData] = useState()\r\n    const [doughnatData, setDoughnatData] = useState()\r\n    const [countriesData, setCountriesData] = useState()\r\n    const [state, setState] = useState({\r\n        countriesData: countriesData,\r\n        direction: {\r\n            price_usd: 'asc',\r\n        }\r\n    })\r\n\r\n\r\n    useEffect(() => {\r\n\r\n        // axios.get(`https://disease.sh/v2/all`)\r\n        //     .then(res => {\r\n        //         setDoughnatData([res.data.cases, res.data.recovered, res.data.deaths])\r\n        //         setMainData([res.data])\r\n        //     })\r\n\r\n        // axios.get(`https://disease.sh/v2/countries`)\r\n        //     .then(res => {\r\n        //         setCountriesData(res.data)\r\n        //         setState({\r\n        //             data: res.data.sort((a, b) => (\r\n        //                 state.direction['cases'] === 'asc'\r\n        //                     ? parseFloat(a['cases']) - parseFloat(b['cases'])\r\n        //                     : parseFloat(b['cases']) - parseFloat(a['cases'])\r\n        //             )),\r\n        //             direction: {\r\n        //                 'cases': state.direction['cases'] === 'asc'\r\n        //                     ? 'desc'\r\n        //                     : 'asc'\r\n        //             }\r\n        //         })\r\n        //     })\r\n        // HandleLoadData2()\r\n        // HandleLoadData1()\r\n\r\n        const fetchData = async () => {\r\n            const response1 = await fetch('https://disease.sh/v2/all')\r\n            let data1 = await response1.json()\r\n            setDoughnatData([data1.cases, data1.recovered, data1.deaths])\r\n            setMainData([data1])\r\n\r\n            const response = await fetch('https://disease.sh/v2/countries')\r\n            let data = await response.json()\r\n            setCountriesData(data)\r\n            setState({\r\n                data: data.sort((a, b) => (\r\n                    state.direction['cases'] === 'asc'\r\n                        ? parseFloat(a['cases']) - parseFloat(b['cases'])\r\n                        : parseFloat(b['cases']) - parseFloat(a['cases'])\r\n                )),\r\n                direction: {\r\n                    'cases': state.direction['cases'] === 'asc'\r\n                        ? 'desc'\r\n                        : 'asc'\r\n                }\r\n            })\r\n        }\r\n        fetchData()\r\n    }, [])\r\n\r\n\r\n    // const HandleLoadData1 = async () => {\r\n    //     const response1 = await fetch('https://disease.sh/v2/all')\r\n    //     let data1 = await response1.json()\r\n    //     setDoughnatData([data1.cases, data1.recovered, data1.deaths])\r\n    //     setMainData([data1])\r\n    // }\r\n\r\n    // const HandleLoadData2 = async () => {\r\n    //     const response = await fetch('https://disease.sh/v2/countries')\r\n    //     let data = await response.json()\r\n    //     setCountriesData(data)\r\n\r\n    //     setState({\r\n    //         data: data.sort((a, b) => (\r\n    //             state.direction['cases'] === 'asc'\r\n    //                 ? parseFloat(a['cases']) - parseFloat(b['cases'])\r\n    //                 : parseFloat(b['cases']) - parseFloat(a['cases'])\r\n    //         )),\r\n    //         direction: {\r\n    //             'cases': state.direction['cases'] === 'asc'\r\n    //                 ? 'desc'\r\n    //                 : 'asc'\r\n    //         }\r\n    //     })\r\n    // }\r\n\r\n    // function FormatNum(num) {\r\n    //     if (num) {\r\n    //         return (\r\n    //             num.toString().replace(/\\B(?=(\\d{3})+(?!\\d))/g, \" \")\r\n    //         )\r\n    //     }\r\n    // }\r\n\r\n    function numberTrans3(a, b) {\r\n        if (a) {\r\n            let output = b / (a / 100)\r\n            output = b / (a / 100)\r\n            output = output.toFixed(3)\r\n            output = output.toString()\r\n            output = output.replace(\".\", \",\")\r\n            return (\r\n                <div className=\"aktiveNakazenych\">\r\n                    <span>V percentách:</span> {output}%\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n\r\n    function sortBy(key) {\r\n        setState({\r\n            countriesData: countriesData.sort((a, b) => (\r\n                state.direction[key] === 'asc'\r\n                    ? parseFloat(a[key]) - parseFloat(b[key])\r\n                    : parseFloat(b[key]) - parseFloat(a[key])\r\n            )),\r\n            direction: {\r\n                [key]: state.direction[key] === 'asc'\r\n                    ? 'desc'\r\n                    : 'asc'\r\n            }\r\n        })\r\n    }\r\n\r\n\r\n    return (\r\n        mainData && doughnatData && countriesData && (state.direction['cases'] || state.direction['tests']\r\n            || state.direction['active']\r\n            || state.direction['todayCases']\r\n            || state.direction['deaths']\r\n            || state.direction['recovered']\r\n            || state.direction['todayDeaths']) ?\r\n            <div className=\"covidApp\">\r\n                {console.log(\"CovidApp\")}\r\n                {\r\n                    mainData ?\r\n                        <div className=\"cardsDiv\">\r\n                            <div className=\"cards\">\r\n                                <div className=\"topCard\">\r\n                                    <div className=\"obrDiv\">\r\n                                        <div className=\"circle\">\r\n                                            <img alt=\"\" src={coronaIcon} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"textCard\">Počet nakazených</div>\r\n                                </div>\r\n                                <div className=\"mainText\">\r\n                                    <FormatNumber prop={mainData[0].cases} />\r\n                                    <div className=\"aktiveNakazenych\">\r\n                                        <span>Počet aktívnych prípadov:</span> <FormatNumber prop={mainData[0].active} />\r\n                                    </div>\r\n                                </div>\r\n                            </div>\r\n\r\n\r\n                            <div className=\"cards\">\r\n                                <div className=\"topCard\">\r\n                                    <div className=\"obrDiv\">\r\n                                        <div className=\"circle HP\">\r\n                                            <FaPlusCircle color={\"green\"} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"textCard\"> Počet vyliečených</div>\r\n                                </div>\r\n                                <div className=\"mainText\">\r\n                                    <FormatNumber prop={mainData[0].recovered} />\r\n                                    {numberTrans3(mainData[0].cases, mainData[0].recovered)}\r\n                                </div>\r\n                            </div>\r\n\r\n                            <div className=\"cards\">\r\n                                <div className=\"topCard\">\r\n                                    <div className=\"obrDiv\">\r\n                                        <div className=\"circle skull\">\r\n                                            <GiDeathSkull color={\"white\"} />\r\n                                        </div>\r\n                                    </div>\r\n                                    <div className=\"textCard\"> Počet úmrtí</div>\r\n                                </div>\r\n                                <div className=\"mainText\">\r\n                                    <FormatNumber prop={mainData[0].deaths} />\r\n                                    {numberTrans3(mainData[0].cases, mainData[0].deaths)}\r\n                                </div>\r\n                            </div>\r\n                        </div>\r\n                        : ''\r\n                }\r\n                {/* <DataGrid /> */}\r\n                <DougnatChart dataForGraph={doughnatData} />\r\n                <br></br>\r\n                <br></br>\r\n                <div className=\"SlovenskeUdajeLink\" ><Link to='/Covid/CovidSK'>Slovenské údaje <AiOutlineDoubleRight className=\"iconSlovUdaje\" /></Link></div>\r\n                <br></br><br></br>\r\n                <SvetTabulka countriesData={countriesData} mainData={mainData} sortBy={sortBy} />\r\n                {/* <SvetTabulka countriesData={countriesData} mainData={mainData} sortBy={useMemo(() => { return sortBy }, [])} /> */}\r\n\r\n            </div >\r\n            : null\r\n\r\n    )\r\n}\r\n\r\nexport default CovidApp\r\n","import React from 'react';\nimport './App.css';\nimport Nav from './Nav';\n\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\nimport CovidApp from './Covid/CovidApp';\n// const CovidApp = React.lazy(() => import('./Covid/CovidApp'));\n\n// import CovidSK from './Covid/CovidSK';\nconst CovidSK = React.lazy(() => import('./Covid/CovidSK'));\n\n// import CovidApp from './Covid/CovidApp';\n// import CovidSK from './Covid/CovidSK';\n// import TodoApp from './Todo/TodoApp';\n// import { polyfill } from 'es6-promise'; polyfill();\n// require('es6-promise').polyfill();\n// require('isomorphic-fetch');\n\n\nfunction App() {\n\n\n  return (\n    <Router basename=\"/\">\n      <div className=\"App\">\n        <Nav />\n        <Switch>\n          <Route path=\"/\" component={CovidApp} exact />\n          <Route path=\"/Covid/CovidApp\" component={CovidApp} />\n          <Route path=\"/Covid/CovidSK\" component={CovidSK} />\n          {/* <Route path=\"/Todo\" component={TodoApp} /> */}\n        </Switch>\n      </div>\n    </Router>\n  );\n}\n\n\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n","module.exports = __webpack_public_path__ + \"static/media/coronaIcon.02ed3e1a.svg\";","module.exports = __webpack_public_path__ + \"static/media/earth.cdc4522b.svg\";","module.exports = __webpack_public_path__ + \"static/media/slovakiaIcon.a29682dd.svg\";"],"sourceRoot":""}